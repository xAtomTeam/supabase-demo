{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,E,I,E,E,kD,E,iB,C,GCGa,EAAA,MAAA,CAAA,EAAA,SAAA,IAAA,GAHb,IAAA,EAAA,EAAA,eACA,EAAA,EAAA,c,E,E,c,C,GAEO,IAAM,EAAS,KACpB,AAAA,CAAA,EAAA,EAAA,OAAQ,AAAR,EAAS,IAAI,CACV,UAAU,GACV,IAAI,CAAC,AAAC,IACL,GAAI,EAAK,IAAI,EAAI,CAAC,EAAK,KAAK,CAC1B,AAAA,CAAA,EAAA,EAAA,QAAQ,AAAR,EAAS,4BACJ,CACL,GAAM,CAAE,KAAA,CAAI,CAAE,CAAG,AAAA,CAAA,EAAA,EAAA,OAAQ,AAAR,EAAS,IAAI,CAAC,iBAAiB,CAC9C,CAAC,EAAO,KACN,QAAQ,GAAG,CAAC,EAAO,GACf,IACF,AAAA,CAAA,EAAA,EAAA,QAAQ,AAAR,EAAS,wBACT,EAAK,YAAY,CAAC,WAAW,GAEjC,EAEJ,CACF,GACC,KAAK,CAAC,QAAQ,GAAG,CACtB,C,E,C,c,Q,a,Q,iD,O,E,E,E,C,E","sources":["<anon>","src/modules/auth/verify.ts"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"dRyYX\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"verify\", ()=>verify);\nvar _core = require(\"@xatom/core\");\nvar _supbase = require(\"../supbase\");\nvar _supbaseDefault = parcelHelpers.interopDefault(_supbase);\nconst verify = ()=>{\n    (0, _supbaseDefault.default).auth.getSession().then((data)=>{\n        if (data.data && !data.error) (0, _core.navigate)(\"/dashboard/task-list\");\n        else {\n            const { data } = (0, _supbaseDefault.default).auth.onAuthStateChange((event, session)=>{\n                console.log(event, session);\n                if (session) {\n                    (0, _core.navigate)(\"/dashboard/task-list\");\n                    data.subscription.unsubscribe();\n                }\n            });\n        }\n    }).catch(console.log);\n};\n\n},{\"@xatom/core\":\"5eqAK\",\"../supbase\":\"54PYi\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jiucr\"}]},[], null, \"parcelRequire89a0\")\n\n//# sourceMappingURL=verify.d8c6abf5.js.map\n","import { navigate } from \"@xatom/core\";\nimport supabase from \"../supbase\";\n\nexport const verify = () => {\n  supabase.auth\n    .getSession()\n    .then((data) => {\n      if (data.data && !data.error) {\n        navigate(\"/dashboard/task-list\");\n      } else {\n        const { data } = supabase.auth.onAuthStateChange(\n          (event, session) => {\n            console.log(event, session);\n            if (session) {\n              navigate(\"/dashboard/task-list\");\n              data.subscription.unsubscribe();\n            }\n          }\n        );\n      }\n    })\n    .catch(console.log);\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","parcelHelpers","defineInteropFlag","export","verify","_core","_supbase","_supbaseDefault","interopDefault","default","auth","getSession","then","data","error","navigate","onAuthStateChange","event","session","console","log","subscription","unsubscribe","catch"],"version":3,"file":"verify.d8c6abf5.js.map"}