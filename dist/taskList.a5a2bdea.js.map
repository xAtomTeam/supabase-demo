{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAiBa;AAjBb;AAKA;AACA;;AAEA,MAAM,kBAAkB;IACtB,MAAM,MAAM,IAAI,CAAA,GAAA,iBAAW,AAAD,EAAE,CAAC,iBAAiB,CAAC;IAC/C,IAAI,EAAE,CAAC,SAAS,CAAC;QACf,IAAI,cAAc,CAAC;QACnB,EAAE,cAAc;QAChB,CAAA,GAAA,YAAM,AAAD;IACP;IACA,IAAI,cAAc,CAAC;AACrB;AACO,MAAM,WAAW;IACtB;IACA,MAAM,OAAO,IAAI,CAAA,GAAA,qBAAe,AAAD,EAC7B,CAAC,qBAAqB,CAAC;IAGzB,IAAI,WAKE,EAAE;IAER,MAAM,OAAO,IAAI,CAAA,GAAA,mBAAa,AAAD,EAC3B,CAAC,gBAAgB,CAAC,EAClB;QACE,aAAa,CAAC,gBAAgB,CAAC;QAC/B,eAAe,CAAC,sBAAsB,CAAC;QACvC,gBAAgB,CAAC,wBAAwB,CAAC;IAC5C;IAEF,IAAI,YAAY;IAEhB,MAAM,QAAQ;QACZ,YAAY;QACZ,KAAK,WAAW;QAChB,KAAK,mBAAmB,CAAC;QACzB,CAAA,GAAA,uBAAQ,AAAD,EACJ,IAAI,CAAC,QACL,MAAM,GACN,IAAI,CAAC,CAAC;YACL,QAAQ,GAAG,CAAC;YACZ,KAAK,UAAU;YACf,WAAW,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,EAAE,GAAG,EAAE,EAAE;YAC/C,KAAK,mBAAmB,CAAC;YACzB,KAAK,OAAO,CAAC;YACb,YAAY;QACd;IACJ;IAEA,MAAM,UAAU,CAAC;QACf,YAAY;QACZ,KAAK,WAAW;QAChB,KAAK,mBAAmB,CAAC;QACzB,CAAA,GAAA,uBAAQ,AAAD,EACJ,IAAI,CAAC,QACL,MAAM,CAAC;YACN,MAAM;YACN,MAAM;YACN,OAAO,CAAA,GAAA,cAAQ,AAAD,EAAE,OAAO,GAAG,KAAK;QACjC,GACC,IAAI,CAAC,CAAC;YACL,IAAI,KAAK,KAAK,EAAE;gBACd,KAAK,UAAU;gBACf,MACE,KAAK,KAAK,CAAC,OAAO,IAAI;gBAExB,YAAY;gBAEZ;YACF;YACA,KAAK,SAAS;YACd;QACF;IACJ;IACA,MAAM,mBAAmB,CACvB,QACA;QAEA,YAAY;QACZ,KAAK,WAAW;QAChB,KAAK,mBAAmB,CAAC;QACzB,CAAA,GAAA,uBAAQ,AAAD,EACJ,IAAI,CAAC,QACL,MAAM,CAAC;YACN,MAAM;QACR,GACC,EAAE,CAAC,MAAM,QACT,EAAE,CAAC,SAAS,CAAA,GAAA,cAAQ,AAAD,EAAE,OAAO,GAAG,KAAK,EACpC,IAAI,CAAC,CAAC;YACL,IAAI,KAAK,KAAK,EAAE;gBACd,KAAK,UAAU;gBACf,MACE,KAAK,KAAK,CAAC,OAAO,IAAI;gBAExB,YAAY;gBACZ;YACF;YACA,KAAK,SAAS;YACd;QACF;IACJ;IACA,MAAM,aAAa,CAAC;QAClB,YAAY;QACZ,KAAK,WAAW;QAChB,KAAK,mBAAmB,CAAC;QACzB,CAAA,GAAA,uBAAQ,AAAD,EACJ,IAAI,CAAC,QACL,MAAM,GACN,EAAE,CAAC,MAAM,QACT,EAAE,CAAC,SAAS,CAAA,GAAA,cAAQ,AAAD,EAAE,OAAO,GAAG,KAAK,EACpC,IAAI,CAAC,CAAC;YACL,IAAI,KAAK,KAAK,EAAE;gBACd,KAAK,UAAU;gBACf,MACE,KAAK,KAAK,CAAC,OAAO,IAAI;gBAExB,YAAY;gBACZ;YACF;YACA,KAAK,SAAS;YACd;QACF;IACJ;IAEA,KAAK,WAAW,CAAC,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE;QACvC,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,GACpC,WAAW,wBAAwB,CAAC;YAClC,SAAS;YACT,WAAW;YACX,UAAU,CAAC,mBAAmB,CAAC;QACjC;QACF,WAAW,oBAAoB,CAAC;YAC9B,aAAa,QAAQ,IAAI;QAC3B;QACA,IAAI,QAAQ,IAAI,EAAE;YAChB,QAAQ,WAAW,CAAC;YACpB,SAAS,WAAW,CAAC;QACvB,OAAO;YACL,QAAQ,cAAc,CAAC;YACvB,SAAS,cAAc,CAAC;QAC1B;QAEA,QAAQ,EAAE,CAAC,SAAS;YAClB,IAAI,WACF;YAEF,iBAAiB,QAAQ,EAAE,EAAE,CAAC,QAAQ,IAAI;QAC5C;QACA,UAAU,EAAE,CAAC,SAAS;YACpB,IAAI,WACF;YAEF,WAAW,QAAQ,EAAE;QACvB;QAEA,OAAO;IACT;IAEA,KAAK,OAAO,CAAC,EAAE;IAEf,KAAK,YAAY,CAAC,CAAC;QACjB,IAAI,CAAC,KAAK,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,GAAG,MAAM,KAAK,GAC5C;QAGF,QAAQ,KAAK,IAAI;IACnB;IAEA,KAAK,aAAa,CAAC,CAAC;QAClB,IAAI,WACF,OAAO;QAGT,OAAO;IACT;IACA;AACF","sources":["src/modules/dashboard/taskList.ts"],"sourcesContent":["import {\n  WFComponent,\n  WFDynamicList,\n  WFFormComponent,\n} from \"@xatom/core\";\nimport { logout, userAuth } from \"../auth\";\nimport supabase from \"../supbase\";\n\nconst renderLogoutBtn = () => {\n  const btn = new WFComponent(`[xa-type=cta-btn]`);\n  btn.on(\"click\", (e) => {\n    btn.setTextContent(\"Please wait...\");\n    e.preventDefault();\n    logout();\n  });\n  btn.setTextContent(\"Logout\");\n};\nexport const taskList = () => {\n  renderLogoutBtn();\n  const form = new WFFormComponent<{ task: string }>(\n    `[xa-type=\"task-list\"]`\n  );\n\n  let taskList: {\n    id: number;\n    task: string;\n    done: boolean;\n    created_at: string;\n  }[] = [];\n\n  const list = new WFDynamicList<(typeof taskList)[0]>(\n    `[xa-type=\"list\"]`,\n    {\n      rowSelector: `[xa-type=\"item\"]`,\n      emptySelector: `[xa-type=\"list-empty\"]`,\n      loaderSelector: `[xa-type=\"list-loading\"]`,\n    }\n  );\n  let isLoading = true;\n\n  const fetch = () => {\n    isLoading = true;\n    form.disableForm();\n    list.changeLoadingStatus(true);\n    supabase\n      .from(\"Task\")\n      .select()\n      .then((data) => {\n        console.log(data);\n        form.enableForm();\n        taskList = data.data.sort((a, b) => a.id - b.id);\n        list.changeLoadingStatus(false);\n        list.setData(taskList);\n        isLoading = false;\n      });\n  };\n\n  const addTask = (task: string) => {\n    isLoading = true;\n    form.disableForm();\n    list.changeLoadingStatus(true);\n    supabase\n      .from(\"Task\")\n      .insert({\n        task: task,\n        done: false,\n        email: userAuth.getUser().email,\n      })\n      .then((data) => {\n        if (data.error) {\n          form.enableForm();\n          alert(\n            data.error.message || \"Something went wrong!\"\n          );\n          isLoading = false;\n\n          return;\n        }\n        form.resetForm();\n        fetch();\n      });\n  };\n  const changeTaskStatus = (\n    taskId: number,\n    status: boolean\n  ) => {\n    isLoading = true;\n    form.disableForm();\n    list.changeLoadingStatus(true);\n    supabase\n      .from(\"Task\")\n      .update({\n        done: status,\n      })\n      .eq(\"id\", taskId)\n      .eq(\"email\", userAuth.getUser().email)\n      .then((data) => {\n        if (data.error) {\n          form.enableForm();\n          alert(\n            data.error.message || \"Something went wrong!\"\n          );\n          isLoading = false;\n          return;\n        }\n        form.resetForm();\n        fetch();\n      });\n  };\n  const deleteTask = (taskId: number) => {\n    isLoading = true;\n    form.disableForm();\n    list.changeLoadingStatus(true);\n    supabase\n      .from(\"Task\")\n      .delete()\n      .eq(\"id\", taskId)\n      .eq(\"email\", userAuth.getUser().email)\n      .then((data) => {\n        if (data.error) {\n          form.enableForm();\n          alert(\n            data.error.message || \"Something went wrong!\"\n          );\n          isLoading = false;\n          return;\n        }\n        form.resetForm();\n        fetch();\n      });\n  };\n\n  list.rowRenderer(({ rowData, rowElement }) => {\n    const { doneBtn, deleteBtn, taskText } =\n      rowElement.getManyChildAsComponents({\n        doneBtn: \"[xa-type=done]\",\n        deleteBtn: \"[xa-type=delete]\",\n        taskText: `[xa-type=item-text]`,\n      });\n    rowElement.updateTextViaAttrVar({\n      \"task-text\": rowData.task,\n    });\n    if (rowData.done) {\n      doneBtn.addCssClass(\"active\");\n      taskText.addCssClass(\"active\");\n    } else {\n      doneBtn.removeCssClass(\"active\");\n      taskText.removeCssClass(\"active\");\n    }\n\n    doneBtn.on(\"click\", () => {\n      if (isLoading) {\n        return;\n      }\n      changeTaskStatus(rowData.id, !rowData.done);\n    });\n    deleteBtn.on(\"click\", () => {\n      if (isLoading) {\n        return;\n      }\n      deleteTask(rowData.id);\n    });\n\n    return rowElement;\n  });\n\n  list.setData([]);\n\n  form.onFormSubmit((data) => {\n    if (!data.task || data.task.trim().length === 0) {\n      return;\n    }\n\n    addTask(data.task);\n  });\n\n  list.emptyRenderer((el) => {\n    if (isLoading) {\n      return null;\n    }\n\n    return el;\n  });\n  fetch();\n};\n"],"names":[],"version":3,"file":"taskList.a5a2bdea.js.map","sourceRoot":"../"}